{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-companies/allCompanies.component.html","webpack:///./src/app/all-companies/allCompanies.component.scss","webpack:///./src/app/all-companies/allCompanies.component.ts","webpack:///./src/app/all-employeepayments/allPaymentsEmployee.component.html","webpack:///./src/app/all-employeepayments/allPaymentsEmployee.component.scss","webpack:///./src/app/all-employeepayments/allPaymentsEmployee.component.ts","webpack:///./src/app/all-employees/allEmployees.component.html","webpack:///./src/app/all-employees/allEmployees.component.scss","webpack:///./src/app/all-employees/allEmployees.component.ts","webpack:///./src/app/all-employeesEmployee/allEmployeesEmployee.component.html","webpack:///./src/app/all-employeesEmployee/allEmployeesEmployee.component.scss","webpack:///./src/app/all-employeesEmployee/allEmployeesEmployee.component.ts","webpack:///./src/app/all-payments/allPayments.component.html","webpack:///./src/app/all-payments/allPayments.component.scss","webpack:///./src/app/all-payments/allPayments.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-ride/bookRide.component.html","webpack:///./src/app/book-ride/bookRide.component.scss","webpack:///./src/app/book-ride/bookRide.component.ts","webpack:///./src/app/createCompany/company-create.html","webpack:///./src/app/createCompany/company-create.scss","webpack:///./src/app/createCompany/company-create.ts","webpack:///./src/app/createEmployee/employee-create.html","webpack:///./src/app/createEmployee/employee-create.scss","webpack:///./src/app/createEmployee/employee-create.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/record-payment/recordPayment.component.scss","webpack:///./src/app/record-payment/recordPayment.component.ts","webpack:///./src/app/record-payment/recordPayment.html","webpack:///./src/app/services/rest.service.ts","webpack:///./src/app/services/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Company Search\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          \\n          <form class=\\\"art-pad30\\\">\\n              <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"searchParams.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"searchParams.src\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Industry\\\" [(ngModel)]=\\\"searchParams.industry\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Company Identification Number\\\" [(ngModel)]=\\\"searchParams.cin\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Owner\\\" [(ngModel)]=\\\"searchParams.owner\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n                </mat-grid-list>  \\n                <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n            </form>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          All Companies Grid\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                  </mat-checkbox>\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                [checked]=\\\"selection.isSelected(row)\\\">\\n                  </mat-checkbox>\\n                </td>\\n              </ng-container>\\n            \\n              <!-- Invoice Number Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Company Name </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"viewSignedInvoice(element.c_name)\\\"></a> {{element.c_name}} </td>\\n                </ng-container>\\n                          \\n              <!-- Amount Column -->\\n              <ng-container matColumnDef=\\\"owner\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Owner </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_owner}} </td>\\n              </ng-container>\\n            \\n              <!-- Seller ID Column -->\\n              <ng-container matColumnDef=\\\"number\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_contact_number}} </td>\\n              </ng-container>\\n            \\n              <!-- Banker ID Column -->\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_contact_email}} </td>\\n              </ng-container>\\n\\n              <!-- Created Date Column -->\\n              <ng-container matColumnDef=\\\"industry\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Industry </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_industry_type}} </td>\\n              </ng-container>\\n\\n              <!-- Status Column -->\\n              <ng-container matColumnDef=\\\"zip\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ZIP code </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_zip}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"cin\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> CIN </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.c_cin}} </td>\\n              </ng-container>\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n              (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n              </tr>\\n            </table>\\n            <!--(click)=\\\"selection.toggle(row)\\\"-->\\n          <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n          </mat-paginator>\\n          <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n          \\n              <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n              <mat-menu #actions=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                <button mat-menu-item >Cancel Ride</button>\\n              </mat-menu>              \\n            </mat-toolbar>\\n      </div>\\n    </div>\\n</div>\\n\\n<!--\\n  https://blog.angular-university.io/angular-material-data-table/\\n  https://github.com/angular/material2/tree/master/src/material-examples/paginator-configurable\\n-->\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  owner: string;\n  number: string;\n  email: string;\n  industry: string;\n  zip: string;\n  cin: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-allCompanies',\n  templateUrl: './allCompanies.component.html',\n  styleUrls: ['./allCompanies.component.scss']\n})\nexport class AllCompaniesComponent implements OnInit {\n\n  displayedColumns: string[] = ['select', 'name', 'owner', 'number', 'email', 'industry', 'zip', 'cin'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  ngOnInit() {\n    var data = [];\n    this.http.getCompanies().subscribe(\n      (response)=>{\n        console.log(response.json());\n        data = response.json().data;\n        console.log(data);\n        this.dataSource = new MatTableDataSource<Companies>(data);      \n      },(error)=>{\n        console.log(error);\n      });\n  }\n\n}\n","module.exports = \"<div>\\n    <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Payment Search\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            \\n            <form class=\\\"art-pad30\\\">\\n                <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"searchParams.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"searchParams.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Email\\\" [(ngModel)]=\\\"searchParams.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Company ID\\\" [(ngModel)]=\\\"searchParams.cid\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                  </mat-grid-list>  \\n                  <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            All Payments Grid\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Employee Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"makePayment(element)\\\"></a> {{element.e_name}} </td>\\n                  </ng-container>\\n                            \\n                <!-- Amount Column -->\\n                <ng-container matColumnDef=\\\"ssn\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Company Name </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.m_company_name}} </td>\\n                </ng-container>\\n              \\n                <!-- Seller ID Column -->\\n                <ng-container matColumnDef=\\\"salary\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary Deposited (per Month) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.m_salary_monthly}} </td>\\n                </ng-container>\\n              \\n                <!-- Banker ID Column -->\\n                <ng-container matColumnDef=\\\"contribution\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> 401(K) Contribution </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.m_contribution_to_401k}} </td>\\n                </ng-container>\\n\\n                <!-- Created Date Column -->\\n                <ng-container matColumnDef=\\\"on\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary Deposited on </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_deposited_on}} </td>\\n                </ng-container>\\n\\n                <!-- Invoice Number Column -->\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n                </tr>\\n              </table>\\n              <!--(click)=\\\"selection.toggle(row)\\\"-->\\n            <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n            \\n                <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n                <mat-menu #actions=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                  <button mat-menu-item >Cancel Ride</button>\\n                </mat-menu>              \\n              </mat-toolbar>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  ssn: string;\n  number: string;\n  email: string;\n  department: string;\n  address: string;\n  salary: string;\n  contri401K: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-allPaymentsEmployee',\n  templateUrl: './allPaymentsEmployee.component.html',\n  styleUrls: ['./allPaymentsEmployee.component.scss']\n})\nexport class AllPaymentsEmployeeComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'ssn', 'salary', 'contribution', 'on'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private forEmployee:boolean = true;\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  private allList:boolean = false;\n  ngOnInit() {\n    var data = [];\n      this.http.getPaymentsEmployee({companyName:JSON.parse(localStorage.getItem(\"login\")).username}).subscribe(\n        (response)=>{\n          console.log(response.json());\n          data = response.json().data;\n          data.map(function(dataItem){\n            dataItem.e_monthly_pay = dataItem.m_salary/12;\n            dataItem.e_monthly_pay = Math.round(dataItem.e_monthly_pay * 100) / 100;\n            dataItem.e_deposited_on = dataItem.m_created_date.split(\"T\")[0];\n          })\n          console.log(data);\n          this.dataSource = new MatTableDataSource<Companies>(data);      \n        },(error)=>{\n          console.log(error);\n        });\n  }\n  makePayment(forRecord){\n    console.log(forRecord);\n    this.allList = true;\n    \n  }\n}","module.exports = \"<div>\\n    <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Employee Search\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            \\n            <form class=\\\"art-pad30\\\">\\n                <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"searchParams.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Number\\\" [(ngModel)]=\\\"searchParams.number\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"searchParams.dept\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"SSN\\\" [(ngModel)]=\\\"searchParams.ssn\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Salary\\\" [(ngModel)]=\\\"searchParams.salary\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                  </mat-grid-list>  \\n                  <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            All Employees Grid\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"name\\\" (click)=\\\"makePayment(element)\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"makePayment(element)\\\"></a> {{element.e_name}} </td>\\n                  </ng-container>\\n                            \\n                <!-- Amount Column -->\\n                <ng-container matColumnDef=\\\"ssn\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> SSN </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_ssn}} </td>\\n                </ng-container>\\n              \\n                <!-- Seller ID Column -->\\n                <ng-container matColumnDef=\\\"number\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Number </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_contact_number}} </td>\\n                </ng-container>\\n              \\n                <!-- Banker ID Column -->\\n                <ng-container matColumnDef=\\\"email\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_contact_email}} </td>\\n                </ng-container>\\n\\n                <!-- Created Date Column -->\\n                <ng-container matColumnDef=\\\"department\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_dept}} </td>\\n                </ng-container>\\n\\n                <!-- Status Column -->\\n                <ng-container matColumnDef=\\\"address\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_address}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"salary\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_salary}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"contri401K\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> 401K(per year) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_contri401K}} </td>\\n                </ng-container>\\n\\n                <!-- Invoice Number Column -->\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n                </tr>\\n              </table>\\n              <!--(click)=\\\"selection.toggle(row)\\\"-->\\n            <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n            \\n                <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n                <mat-menu #actions=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                  <button mat-menu-item >Cancel Ride</button>\\n                </mat-menu>              \\n              </mat-toolbar>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  ssn: string;\n  number: string;\n  email: string;\n  department: string;\n  address: string;\n  salary: string;\n  contri401K: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-allEmployees',\n  templateUrl: './allEmployees.component.html',\n  styleUrls: ['./allEmployees.component.scss']\n})\nexport class AllEmployeesComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'ssn', 'number', 'email', 'department', 'address', 'salary', 'contri401K'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private forEmployee:boolean = true;\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  private allList:boolean = false;\n  ngOnInit() {\n    var data = [];\n      this.http.getEmployees({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n        (response)=>{\n          console.log(response.json());\n          data = response.json().data;\n          data.map(function(dataItem){\n            dataItem.e_contri401K = dataItem.e_salary - dataItem.e_salary*(1-(dataItem.e_401K_contribution/100));\n          })\n          console.log(data);\n          this.dataSource = new MatTableDataSource<Companies>(data);      \n        },(error)=>{\n          console.log(error);\n        });\n  }\n  makePayment(forRecord){\n    console.log(forRecord);\n    this.allList = true;\n\n  }\n}","module.exports = \"<div [hidden]=\\\"allList\\\">\\n<div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Employee Search\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            \\n            <form class=\\\"art-pad30\\\">\\n                <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"searchParams.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Number\\\" [(ngModel)]=\\\"searchParams.number\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"searchParams.dept\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"SSN\\\" [(ngModel)]=\\\"searchParams.ssn\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Salary\\\" [(ngModel)]=\\\"searchParams.salary\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                  </mat-grid-list>  \\n                  <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            All Employees Grid\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Checkbox Column -->\\n                <ng-container matColumnDef=\\\"select\\\">\\n                  <th mat-header-cell *matHeaderCellDef>\\n                    <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                  [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                  [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                    </mat-checkbox>\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                  (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                  [checked]=\\\"selection.isSelected(row)\\\">\\n                    </mat-checkbox>\\n                  </td>\\n                </ng-container>\\n                  <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"viewSignedInvoice(element.e_name)\\\"></a> {{element.e_name}} </td>\\n                  </ng-container>\\n                            \\n                <!-- Amount Column -->\\n                <ng-container matColumnDef=\\\"company\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_company_name}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"company_id\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Company ID </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_company_id}} </td>\\n                </ng-container>\\n\\n              \\n                <!-- Seller ID Column -->\\n                <ng-container matColumnDef=\\\"number\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contribution (401K) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_401K_contribution}} &nbsp; % </td>\\n                </ng-container>\\n              \\n                <!-- Banker ID Column -->\\n                <ng-container matColumnDef=\\\"email\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_contact_email}} </td>\\n                </ng-container>\\n\\n                <!-- Created Date Column -->\\n                <ng-container matColumnDef=\\\"department\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_dept}} </td>\\n                </ng-container>\\n\\n                <!-- Status Column -->\\n                <ng-container matColumnDef=\\\"salary\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_salary}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"contri401K\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> 401K(per year) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_contri401K}} </td>\\n                </ng-container>\\n\\n              \\n                <!-- Invoice Number Column -->\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n                </tr>\\n              </table>\\n              <!--(click)=\\\"selection.toggle(row)\\\"-->\\n            <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n            \\n                <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n                <mat-menu #actions=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                  <button mat-menu-item >Cancel Ride</button>\\n                </mat-menu>              \\n              </mat-toolbar>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n<div [hidden]=\\\"!allList\\\">\\n  <div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Employee Search\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          \\n        <form class=\\\"art-pad30\\\">\\n          <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"ename\\\" style=\\\"color: black\\\"  [disabled]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <input matInput placeholder=\\\"Employeee SSN\\\" [(ngModel)]=\\\"essn\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <input matInput placeholder=\\\"Employee Address\\\" [(ngModel)]=\\\"eaddress\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                  </mat-form-field>\\n              </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n            <mat-grid-tile>\\n                <mat-form-field style=\\\"width:90%;\\\">\\n                    <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"ecompany\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                  </mat-form-field>\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n                <mat-form-field style=\\\"width:90%;\\\">\\n                    <input matInput placeholder=\\\"Company ID \\\" [(ngModel)]=\\\"ecompanyid\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                  </mat-form-field>\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n                <mat-form-field style=\\\"width:90%;\\\">\\n                    <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"edepartment\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                </mat-form-field>\\n            </mat-grid-tile>\\n        </mat-grid-list>\\n        <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n          <mat-grid-tile>\\n              <mat-form-field style=\\\"width:90%;\\\">\\n                  <input matInput placeholder=\\\"Employee Contact Number\\\" [(ngModel)]=\\\"enumber\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                </mat-form-field>\\n          </mat-grid-tile>\\n          <mat-grid-tile>\\n              <mat-form-field style=\\\"width:90%;\\\">\\n                  <input matInput placeholder=\\\"Employee Contact Email\\\" [(ngModel)]=\\\"eemail\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                </mat-form-field>\\n          </mat-grid-tile>\\n      </mat-grid-list>            \\n        </form>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          All Employees Grid\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          <form class=\\\"art-pad30\\\">\\n              <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Annual Income (in $)\\\" [(ngModel)]=\\\"esalary\\\" style=\\\"color: black\\\" [disabled]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Monthly Income \\\" [(ngModel)]=\\\"esalarymonthly\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n              </mat-grid-list>\\n              <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\n  \\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"401(K) Contribution (in %)\\\" [(ngModel)]=\\\"e401k\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"updateRecord()\\\">\\n                            Update 401(K) %\\n                          </button>    \\n                        </mat-grid-tile>\\n              </mat-grid-list>\\n            </form>        \\n      </div>\\n    </div>\\n</div>\\n\\n</div>\\n<!--\\n  https://blog.angular-university.io/angular-material-data-table/\\n  https://github.com/angular/material2/tree/master/src/material-examples/paginator-configurable\\n-->\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  company: string;\n  company_id: string;\n  number: string;\n  email: string;\n  department: string;\n  salary: string;\n  contri401K: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-allEmployeesEmployee',\n  templateUrl: './allEmployeesEmployee.component.html',\n  styleUrls: ['./allEmployeesEmployee.component.scss']\n})\nexport class AllEmployeesEmployeeComponent implements OnInit {\n\n  displayedColumns: string[] = ['select', 'name', 'company','company_id', 'number', 'email', 'department', 'salary', 'contri401K'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private forEmployee:boolean = true;\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  private allList:boolean = false;\n  private ename:String = \"\";\n  private eaddress:String = \"\";\n  private essn:String = \"\";\n  private ecompany:String = \"\";\n  private ecompanyid:String = \"\";\n  private edepartment:String = \"\";\n  private esalary = 0.0;\n  private esalarymonthly = 0.0;\n  private e401k = 0.0;\n  private esalary401k = 0.0;\n  private esalary401kmonthly = 0.0;\n  private enumber:String = \"\";\n  private eemail:String = \"\";  \n  private empData = [];\n  ngOnInit() {\n    var data = [];\n    this.http.getEmployeesForEmployee({emailID:JSON.parse(localStorage.getItem(\"login\")).username}).subscribe(\n      (response)=>{\n        console.log(response.json());\n        data = response.json().data;\n        this.empData = data;\n        data.map(function(dataItem){\n          dataItem.e_contri401K = dataItem.e_salary - dataItem.e_salary*(1-(dataItem.e_401K_contribution/100));\n        })\n        console.log(data);\n        this.dataSource = new MatTableDataSource<Companies>(data);      \n      },(error)=>{\n        console.log(error);\n      });\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    console.log(numSelected + \" \" + numRows);\n    this.allList = true;\n    var forRecord = this.empData[numSelected-1];\n    this.ename = forRecord.e_name;\n    this.essn = forRecord.e_ssn;\n    this.eaddress = forRecord.e_address;\n    this.ecompany = forRecord.e_company_name;\n    this.ecompanyid = forRecord.e_company_id;\n    this.edepartment = forRecord.e_dept;\n    this.esalary = forRecord.e_salary;\n    this.esalarymonthly = forRecord.e_salary/12;\n    this.esalarymonthly = Math.round(this.esalarymonthly * 100) / 100;\n    this.e401k = forRecord.e_401K_contribution;\n    this.esalary401k = forRecord.e_contri401K;\n    this.esalary401kmonthly = this.esalary401k/12;\n    this.esalary401kmonthly = Math.round(this.esalary401kmonthly * 100) / 100;\n    this.enumber = forRecord.e_contact_number;\n    this.eemail = forRecord.e_contact_email;\n    return numSelected === numRows;\n  } \n  updateRecord(){\n    Swal({\n      title: 'Update the Value to: '+this.e401k+' %?',\n      text: 'This\\'ll Update the Value!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Update',\n      cancelButtonText: 'Cancel'\n    }).then((result) => {\n      var updateObj:any = {};\n      updateObj.e_email = this.eemail;\n      updateObj.e_401K_contribution = this.e401k;\n      updateObj.e_companyName = this.ecompany;\n      console.log(updateObj);\n      this.http.update401K(updateObj).subscribe(\n        (response)=>{\n          console.log(response.json());\n          Swal(\n            'Margin Updated!',\n            'Success'\n          ).then((newResult)=>{\n            //  this.route.navigate(['/dashboard']);\n          })   \n        },(error)=>{\n          console.log(error);\n        }\n      )\n    })    \n  } \n}","module.exports = \"<div>\\n    <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Payment Search\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            \\n            <form class=\\\"art-pad30\\\">\\n                <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n                    <mat-grid-tile>\\n                      <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Deposited Date\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                      </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"searchParams.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Email\\\" [(ngModel)]=\\\"searchParams.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Company ID\\\" [(ngModel)]=\\\"searchParams.cid\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                  </mat-grid-list>  \\n                  <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            All Payments Grid\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"name\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Employee Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"makePayment(element)\\\"></a> {{element.e_name}} </td>\\n                  </ng-container>\\n                            \\n                <!-- Amount Column -->\\n                <ng-container matColumnDef=\\\"ssn\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Employee SSN </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.m_employee_ssn}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"employeeEmail\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Employee Email </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_email}} </td>\\n                </ng-container>\\n              \\n                <!-- Seller ID Column -->\\n                <ng-container matColumnDef=\\\"salary\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary Deposited (per Month) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.m_salary_monthly}} </td>\\n                </ng-container>\\n              \\n                <!-- Banker ID Column -->\\n                <ng-container matColumnDef=\\\"contribution\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> 401(K) Contribution </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.m_contribution_to_401k}} </td>\\n                </ng-container>\\n\\n                <!-- Created Date Column -->\\n                <ng-container matColumnDef=\\\"on\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary Deposited on </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_deposited_on}} </td>\\n                </ng-container>\\n\\n                <!-- Invoice Number Column -->\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n                </tr>\\n              </table>\\n              <!--(click)=\\\"selection.toggle(row)\\\"-->\\n            <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n            \\n                <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n                <mat-menu #actions=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                  <button mat-menu-item >Cancel Ride</button>\\n                </mat-menu>              \\n              </mat-toolbar>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  ssn: string;\n  number: string;\n  email: string;\n  department: string;\n  address: string;\n  salary: string;\n  contri401K: string;\n  transactionId: string;\n  employeeEmail: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-allPayments',\n  templateUrl: './allPayments.component.html',\n  styleUrls: ['./allPayments.component.scss']\n})\nexport class AllPaymentsComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'ssn', 'employeeEmail', 'salary', 'contribution', 'on'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private forEmployee:boolean = true;\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  private allList:boolean = false;\n  ngOnInit() {\n    var data = [];\n      this.http.getPayments({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n        (response)=>{\n          console.log(response.json());\n          data = response.json().data;\n          data.map(function(dataItem){\n            dataItem.e_monthly_pay = dataItem.m_salary/12;\n            dataItem.e_monthly_pay = Math.round(dataItem.e_monthly_pay * 100) / 100;\n            dataItem.e_deposited_on = dataItem.m_created_date.split(\"T\")[0];\n            if(dataItem.blockchain_transaction_id === null){\n              dataItem.blockchain_transaction_id = \"Not stored on Blockchain yet!\"\n            }\n          })\n          console.log(data);\n          this.dataSource = new MatTableDataSource<Companies>(data);      \n        },(error)=>{\n          console.log(error);\n        });\n  }\n  makePayment(forRecord){\n    console.log(forRecord);\n    this.allList = true;\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { AllCompaniesComponent } from './all-companies/allCompanies.component';\nimport { BookRideComponent } from './book-ride/bookRide.component';\nimport { CreateCompanyComponent } from './createCompany/company-create';\nimport { CreateEmployeeComponent } from './createEmployee/employee-create';\nimport { AllEmployeesComponent } from './all-employees/allEmployees.component';\nimport { AllEmployeesEmployeeComponent } from './all-employeesEmployee/allEmployeesEmployee.component';\nimport { RecordPaymentComponent } from './record-payment/recordPayment.component';\nimport { AllPaymentsComponent } from './all-payments/allPayments.component';\nimport { AllPaymentsEmployeeComponent } from './all-employeepayments/allPaymentsEmployee.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'allCompanies', component: AllCompaniesComponent},\n  { path: 'bookRide', component: BookRideComponent},\n  { path: 'addCompanies', component:CreateCompanyComponent},\n  { path: 'addEmployee', component:CreateEmployeeComponent},\n  { path: 'allEmployees', component:AllEmployeesComponent},\n  { path: 'allEmployeesEmployee', component:AllEmployeesEmployeeComponent},\n  { path: 'recordPayment', component:RecordPaymentComponent},\n  { path: 'allPayments', component:AllPaymentsComponent},\n  { path: 'allEmployeePayments', component:AllPaymentsEmployeeComponent},\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    CommonModule\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- <mat-progress-bar *ngIf=\\\"loadSpinner\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar> -->\\n<!-- <mat-spinner *ngIf=\\\"loadSpinner\\\" color=\\\"accent\\\" diameter=\\\"25\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner> -->\\n<app-header *ngIf=\\\"loggedIn\\\"></app-header>\\n<section>\\n  <app-nav *ngIf=\\\"loggedIn\\\"></app-nav>\\n  <router-outlet></router-outlet>\\n</section>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  loadSpinner:boolean = true;\n  loggedIn:boolean = false;\n  role:string;\n  constructor() {\n    \n  }\n\n  ngOnInit(){\n    this.role = JSON.parse(localStorage.getItem('login')).role;\n    this.loadSpinner = false;\n  }\n\n  setLoggedIn(){\n    this.loggedIn = true;\n  }\n\n  removeLoggedIn(){\n    this.loggedIn = false;\n  }\n\n  show(){\n    this.loadSpinner = true;\n  }\n\n  hide(){\n    this.loadSpinner = false;\n  }\n\n  getRole(){\n    return this.role;\n  }\n  \n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ParticlesModule } from 'angular-particle';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport {\n  MatAutocompleteModule, MatBadgeModule, MatBottomSheetModule, MatButtonModule,\n  MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule,\n  MatDialogModule, MatDividerModule, MatExpansionModule, MatFormFieldModule, MatGridListModule,\n  MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatPaginatorModule,\n  MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule,\n  MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule,\n  MatStepperModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatTreeModule,\n  MatNativeDateModule\n} from '@angular/material';\n\nimport { AgmCoreModule, MapsAPILoader } from '@agm/core';\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\n\nimport { AllCompaniesComponent } from './all-companies/allCompanies.component';\nimport { WeatherService } from './services/weather.service';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { NavComponent } from './nav/nav.component';\nimport { RestService } from './services/rest.service';\nimport { BookRideComponent } from './book-ride/bookRide.component';\nimport { CreateCompanyComponent } from './createCompany/company-create';\nimport { CreateEmployeeComponent } from './createEmployee/employee-create';\nimport { AllEmployeesComponent } from './all-employees/allEmployees.component';\nimport { AllEmployeesEmployeeComponent } from './all-employeesEmployee/allEmployeesEmployee.component';\nimport { RecordPaymentComponent } from './record-payment/recordPayment.component';\nimport { AllPaymentsComponent } from './all-payments/allPayments.component';\nimport { AllPaymentsEmployeeComponent } from './all-employeepayments/allPaymentsEmployee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    HeaderComponent,\n    NavComponent,\n    AllCompaniesComponent,\n    BookRideComponent,\n    CreateCompanyComponent,\n    CreateEmployeeComponent,\n    AllEmployeesComponent,\n    AllEmployeesEmployeeComponent,\n    RecordPaymentComponent,\n    AllPaymentsComponent,\n    AllPaymentsEmployeeComponent        \n  ],\n  imports: [\n    AgmCoreModule.forRoot({\n      apiKey : 'AIzaSyBuJOssBr5xuExQvIigYzLG1nui4AF8TEg',\n      libraries : ['geometry'] \n    }),\n    ParticlesModule,\n    GooglePlaceModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpModule,\n    MatNativeDateModule,\n    Ng4LoadingSpinnerModule.forRoot()\n  ],\n  providers: [WeatherService, RestService, MatDatepickerModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Ride Details\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          \\n          <form class=\\\"art-pad30\\\">\\n              <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:80%;\\\">\\n                        <input matInput ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" placeholder=\\\"Enter Source..\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile style=\\\"margin-left: 2%\\\">\\n                      <mat-form-field style=\\\"width:80%;\\\">\\n                        <input matInput ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" placeholder=\\\"Enter Destination..\\\" (onAddressChange)=\\\"handleAddressChange1($event)\\\"/>\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n                </mat-grid-list>\\n                <span style=\\\"margin-left: 5%\\\">\\n                  <u>Enter Ride Type:</u>                \\n                </span>\\n                <mat-grid-list style=\\\"margin-left: 5%\\\" cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n                  <div>\\n                      <div class=\\\"md-radio md-radio-inline\\\">\\n                        <input id=\\\"3\\\" type=\\\"radio\\\" name=\\\"g2\\\" checked>\\n                        <label for=\\\"3\\\">Single Ride</label>\\n                      </div>\\n                      <div class=\\\"md-radio md-radio-inline\\\">\\n                        <input id=\\\"3\\\" type=\\\"radio\\\" name=\\\"g2\\\" checked>\\n                        <label for=\\\"3\\\">Shared Ride</label>\\n                      </div>                      \\n                    </div>\\n                </mat-grid-list>  \\n                <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"findCabs()\\\">Find Cabs</button>            \\n            </form>\\n      </div>\\n    </div>\\n</div>\\n<div [hidden]=\\\"findNotExecYet\\\" class=\\\"example-viewer\\\" style=\\\"height: 100%\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Map\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n        <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"15\\\">\\n          <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>          \\n        </agm-map>\\n      </div>\\n    </div>\\n</div>\\n<div [hidden]=\\\"!findNotExecYet\\\" class=\\\"example-viewer\\\" style=\\\"height: 100%\\\">  \\n  <div style=\\\"margin-top: 10%;margin-left: 10%;width: 80%\\\" [hidden]=\\\"progressBar\\\">\\n  <!-- <mat-spinner></mat-spinner> -->\\n\\n    <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>  \\n  </div>  \\n  <div [hidden]=\\\"!progressBar\\\" style=\\\"margin-left: 35%;\\\">\\n    <mat-card class=\\\"example-card\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>Christopher Nicolas</mat-card-title>\\n        <mat-card-subtitle>Chicago, Illinois</mat-card-subtitle>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"http://d3c6bloycjddy.cloudfront.net/wp-content/uploads/2018/08/pic-1-1.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n      <mat-card-content>\\n        <h3>Christopher Nicolas</h3><p>Rating: &nbsp;<span style=\\\"font-weight: bolder;\\\">4.4 / 5.0</span></p>\\n        <div style=\\\"margin-top: 5%\\\" class=\\\"row\\\">\\n          <div class=\\\" col col-md-6\\\">\\n            Car: <span style=\\\"font-weight: bolder\\\">Jeep Cherokee</span>                    \\n          </div>\\n          <div class=\\\"col col-md-6\\\">\\n            Number: <span style=\\\"font-weight: bolder\\\">GTJ 683</span>                    \\n          </div>\\n        </div>\\n      </mat-card-content>\\n      <mat-card-actions>\\n          <button mat-button class=\\\"btn btn-success\\\" (click)=\\\"confirmBooking()\\\">Confirm Booking</button>\\n          <button mat-button class=\\\"btn btn-warning\\\">Find Other Driver</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</div>\\n<!--\\n  https://blog.angular-university.io/angular-material-data-table/\\n  https://github.com/angular/material2/tree/master/src/material-examples/paginator-configurable\\n-->\\n<!-- Button trigger modal -->\"","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Roboto);\\ntable {\\n  width: 100%; }\\n.mat-row {\\n  background-color: white; }\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\nagm-map {\\n  height: 500px; }\\n.example-card {\\n  max-width: 600px; }\\n.example-header-image {\\n  background-image: url(\\\"https://pe-images.s3.amazonaws.com/photo-editing/cc/new-features/2015/face-aware-liquify/original.jpg\\\");\\n  background-size: cover; }\\n@-webkit-keyframes ripple {\\n  0% {\\n    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0); }\\n  50% {\\n    box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0.1); }\\n  100% {\\n    box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0); } }\\n@keyframes ripple {\\n  0% {\\n    box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0); }\\n  50% {\\n    box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0.1); }\\n  100% {\\n    box-shadow: 0px 0px 0px 15px rgba(0, 0, 0, 0); } }\\n.md-radio {\\n  margin: 16px 0; }\\n.md-radio.md-radio-inline {\\n    display: inline-block; }\\n.md-radio input[type=\\\"radio\\\"] {\\n    display: none; }\\n.md-radio input[type=\\\"radio\\\"]:checked + label:before {\\n      border-color: #337ab7;\\n      -webkit-animation: ripple 0.2s linear forwards;\\n              animation: ripple 0.2s linear forwards; }\\n.md-radio input[type=\\\"radio\\\"]:checked + label:after {\\n      -webkit-transform: scale(1);\\n              transform: scale(1); }\\n.md-radio label {\\n    display: inline-block;\\n    height: 20px;\\n    position: relative;\\n    padding: 0 30px;\\n    margin-bottom: 0;\\n    cursor: pointer;\\n    vertical-align: bottom; }\\n.md-radio label:before, .md-radio label:after {\\n      position: absolute;\\n      content: '';\\n      border-radius: 50%;\\n      transition: all .3s ease;\\n      transition-property: border-color, -webkit-transform;\\n      transition-property: transform, border-color;\\n      transition-property: transform, border-color, -webkit-transform; }\\n.md-radio label:before {\\n      left: 0;\\n      top: 0;\\n      width: 20px;\\n      height: 20px;\\n      border: 2px solid rgba(0, 0, 0, 0.54); }\\n.md-radio label:after {\\n      top: 5px;\\n      left: 5px;\\n      width: 10px;\\n      height: 10px;\\n      -webkit-transform: scale(0);\\n              transform: scale(0);\\n      background: #337ab7; }\\n*, *:before, *:after {\\n  box-sizing: border-box; }\\nbody {\\n  background: #f0f0f0;\\n  position: absolute;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  color: #333; }\\nsection {\\n  background: white;\\n  margin: 0 auto;\\n  padding: 4em;\\n  max-width: 800px; }\\nsection h1 {\\n    margin: 0 0 2em; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Rides {\n  source: string;\n  destination: string;\n}\n\nconst ELEMENT_DATA: Rides[] = [\n];\n\n@Component({\n  selector: 'app-bookRide',\n  templateUrl: './bookRide.component.html',\n  styleUrls: ['./bookRide.component.scss']\n})\nexport class BookRideComponent implements OnInit {\n\n\n  displayedColumns: string[] = ['select', 'source', 'destination'];\n  dataSource:any = new MatTableDataSource<Rides>(ELEMENT_DATA);\n  selection = new SelectionModel<Rides>(true, []);\n  lat = 41.834570;\n  lng = -87.631800;\n  public sourceLat;\n  public sourceLong;\n  public destLat;\n  public destLong;\n  public progressBar:boolean;\n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  public handleAddressChange(event) {\n    console.log(event.formatted_address);\n    this.sourceLat = event.formatted_address.geometry.location.lat();\n    this.sourceLong = event.formatted_address.geometry.location.long();    \n    console.log(this.sourceLat);\n    console.log(this.sourceLong);\n  }\n  public handleAddressChange1(event){\n    console.log(event);    \n    this.destLat = event.formatted_address.geometry.location.lat();\n    this.destLong = event.formatted_address.geometry.location.long();    \n    console.log(this.destLat);\n    console.log(this.destLong);\n  }\n  public findNotExecYet:boolean = false;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  ngOnInit() {\n    var data = [\n      {\n        \"source\" : \"Michigan Ave, Chicago, IL\",\n        \"destination\" : \"Burlington, 1 N State St, Chicago, IL\",\n        \"distance\" : \"6.2 miles\",\n        \"booked_on\" : \"10-29-2019 10:43\",\n        \"totalBookingCost\" : \"$ 13.27\",\n        \"driver\" : \"Tim Howard\"\n      },\n      {\n        \"source\" : \"2951 South King Drive Chicago, IL\",\n        \"destination\" : \"3434 South Michigan Avenue Chicago, IL\",\n        \"distance\" : \"1.2 miles\",\n        \"booked_on\" : \"10-24-2019 16:22\",\n        \"totalBookingCost\" : \"$ 7.63\",\n        \"driver\" : \"John Doe\"\n      },\n      {\n        \"source\" : \"122 South Michigan Avenue Chicago, IL\",\n        \"destination\" : \"Devon Market West Devon Avenue, Chicago, IL\",\n        \"distance\" : \"13.2 miles\",\n        \"booked_on\" : \"10-31-2019 08:35\",\n        \"totalBookingCost\" : \"$ 36.47\",\n        \"driver\" : \"Christopher Nicolas\"\n      },\n      {\n        \"source\" : \"Lake Meadows East 33rd Street, Chicago, IL\",\n        \"destination\" : \"Burlington, 1 N State St, Chicago, IL\",\n        \"distance\" : \"0.2 miles\",\n        \"booked_on\" : \"10-30-2019 12:43\",\n        \"totalBookingCost\" : \"$ 3.78\",\n        \"driver\" : \"Steve Henry\"\n      },\n      {\n        \"source\" : \"Accounting And Tax Services, Inc East Boughton Road, Bolingbrook, IL\",\n        \"destination\" : \"2231 Michigan Avenue Chicago, Illinois\",\n        \"distance\" : \"27.2 miles\",\n        \"booked_on\" : \"10-26-2019 14:43\",\n        \"totalBookingCost\" : \"$ 75.21\",\n        \"driver\" : \"Abdul Razak\"\n      },\n      {\n        \"source\" : \"Roosevelt University South Michigan Avenue, Chicago, IL\",\n        \"destination\" : \"Unibody Auto Collision North Milwaukee Avenue, Chicago, IL\",\n        \"distance\" : \"5.4 miles\",\n        \"booked_on\" : \"10-8-2019 10:43\",\n        \"totalBookingCost\" : \"$ 9.22\",\n        \"driver\" : \"Tim Howard\"\n      },\n      {\n        \"source\" : \"Target North Elston Avenue, Chicago, IL\",\n        \"destination\" : \"Kingston Mines North Halsted Street, Chicago, IL\",\n        \"distance\" : \"2.4 miles\",\n        \"booked_on\" : \"10-12-2019 18:34\",\n        \"totalBookingCost\" : \"$ 8.31\",\n        \"driver\" : \"John Doe\"\n      },\n      {\n        \"source\" : \"UIC Student Center East South Halsted Street, Chicago, IL\",\n        \"destination\" : \"Devon Market West Devon Avenue, Chicago, IL\",\n        \"distance\" : \"12.2 miles\",\n        \"booked_on\" : \"10-30-2019 08:35\",\n        \"totalBookingCost\" : \"$ 36.47\",\n        \"driver\" : \"Christopher Nicolas\"\n      },\n      {\n        \"source\" : \"Lemar Avenue Evanston, IL\",\n        \"destination\" : \"Stuart-Rodgers Photography Green Bay Road, Evanston, IL\",\n        \"distance\" : \"1.5 miles\",\n        \"booked_on\" : \"10-30-2019 12:43\",\n        \"totalBookingCost\" : \"$ 4.88\",\n        \"driver\" : \"Steve Henry\"\n      }];\n\n      this.dataSource = new MatTableDataSource<Rides>(data);      \n  }\n  findCabs(){\n    this.progressBar = false;\n    this.findNotExecYet = true;\n    setTimeout(() => {\n      this.progressBar=true;\n    }, 5000);    \n  }\n  confirmBooking(){\n    Swal({\n      title: 'Confirm Booking?',\n      text: 'This\\'ll Confirm your booking!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Confirm',\n      cancelButtonText: 'Cancel'\n    }).then((result) => {\n        Swal(\n          'Booking Confirmed',\n          'Christopher Nicolas will pick you up in 7 Minutes',\n          'success'\n        ).then((newResult)=>{\n          this.route.navigate(['/allRides']);\n        })\n      },(error)=>{\n        console.log(error);\n      })\n  }\n}","module.exports = \"<div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Application Admin\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source  art-pad10\\\">\\n          <div class=\\\"art-flex-container\\\">\\n            <div class=\\\"example-viewer art-flex-form3\\\">\\n                <div class=\\\"docs-example-viewer-wrapper\\\">\\n                  <div class=\\\"docs-example-viewer-title\\\">\\n                    <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                      Enter Company Details\\n                    </div>\\n                  </div>\\n                  <div class=\\\"docs-example-viewer-source\\\">\\n                      <form>\\n                          <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"companyData.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Company Identification Number\\\" [(ngModel)]=\\\"companyData.cin\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                              <mat-form-field style=\\\"width:90%;\\\">\\n                                <input matInput ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" placeholder=\\\"Enter Address..\\\" (onAddressChange)=\\\"handleAddressChange1($event)\\\"/>\\n                              </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Company ZIP\\\" [(ngModel)]=\\\"companyData.zip\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Company Owner\\\" [(ngModel)]=\\\"companyData.owner\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Industry Type\\\" [(ngModel)]=\\\"companyData.industry\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Primary Contact Number\\\" [(ngModel)]=\\\"companyData.number\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Primary Contact Email\\\" [(ngModel)]=\\\"companyData.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>                                                        \\n                          </mat-grid-list>\\n                          <div style=\\\"text-align: center;margin-bottom: 40px;\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"addCompany(companyData)\\\">\\n                              Add Company\\n                            </button>  \\n                          </div>\\n                      </form>\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2'\nimport { RestService } from '../services/rest.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { Router } from '@angular/router';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n];\n@Component({\n  selector: 'app-companies-new',\n  templateUrl: './company-create.html',\n  styleUrls: ['./company-create.scss']\n})\nexport class CreateCompanyComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  private companyData :any = {};\n  private address:String=\"\";\n  constructor( private http:RestService,  private rout: Router, private spinnerService:Ng4LoadingSpinnerService) {\n      this.companyData.companyName = \"Manifest\";\n      this.companyData.number = \"(312)-901-1723\";\n      this.companyData.email = \"mani.fest@gmail.com\";\n      this.companyData.cin = \"12783HABS871\";\n      this.companyData.address = \"1307, 2951 S King Drive\";\n      this.companyData.owner = \"John Doe\";\n      this.companyData.industry = \"Information Technology\";\n      this.companyData.zip = 60616;\n   }\n\n  ngOnInit() {\n  }\n\n  public handleAddressChange1(event) {\n    console.log(event.formatted_address);\n    this.address = event.formatted_address;\n  }  \n  addCompany(companyData){\n    Swal({\n      title: 'Create new Company: '+companyData.companyName+'?',\n      text: 'This\\'ll Create a New Company!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Create',\n      cancelButtonText: 'Cancel'\n    }).then((result) => {\n      companyData.address = this.address;\n        this.http.addCompany(this.companyData).subscribe(\n          (response)=>{\n            console.log(response.json());\n            Swal(\n              'Company Created! Login with the Password: '+response.json().tempPasswordCreated+'',\n              'Success'\n            ).then((newResult)=>{\n              this.rout.navigate(['/allCompanies']);\n            })\n          },(error)=>{\n            console.log(error);\n          })\n      },(error)=>{\n        console.log(error);\n      })    \n  }\n}\n","module.exports = \"<div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Company Admin\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source  art-pad10\\\">\\n          <div class=\\\"art-flex-container\\\">\\n            <div class=\\\"example-viewer art-flex-form3\\\">\\n                <div class=\\\"docs-example-viewer-wrapper\\\">\\n                  <div class=\\\"docs-example-viewer-title\\\">\\n                    <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                      Enter Employee Details\\n                    </div>\\n                  </div>\\n                  <div class=\\\"docs-example-viewer-source\\\">\\n                      <form>\\n                          <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"employeeData.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"SSN\\\" [(ngModel)]=\\\"employeeData.ssn\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                              <mat-form-field style=\\\"width:90%;\\\">\\n                                <input matInput ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" placeholder=\\\"Enter Address..\\\" (onAddressChange)=\\\"handleAddressChange1($event)\\\"/>\\n                              </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Contact Number\\\" [(ngModel)]=\\\"employeeData.number\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Email ID\\\" [(ngModel)]=\\\"employeeData.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                                <mat-form-field style=\\\"width:90%;\\\">\\n                                  <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"employeeData.dept\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                </mat-form-field>\\n                            </mat-grid-tile>\\n\\n                            <mat-grid-tile>\\n                              <mat-form-field style=\\\"width:90%;\\\">\\n                                <input matInput placeholder=\\\"Salary\\\" [(ngModel)]=\\\"employeeData.salary\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                              </mat-form-field>\\n                            </mat-grid-tile>\\n                          \\n                            <mat-grid-tile>\\n                              <button class=\\\"btn btn-primary\\\" (click)=\\\"addEmployee(employeeData)\\\" style=\\\"float: right;\\\">\\n                                  Add Employee\\n                              </button>\\n                            </mat-grid-tile>                                                        \\n                          </mat-grid-list>\\n                      </form>\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport Swal from 'sweetalert2'\nimport { RestService } from '../services/rest.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { Router } from '@angular/router';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n];\n@Component({\n  selector: 'app-employee-new',\n  templateUrl: './employee-create.html',\n  styleUrls: ['./employee-create.scss']\n})\nexport class CreateEmployeeComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  private employeeData :any = {};\n  private address:String=\"\";\n  constructor( private http:RestService,  private rout: Router, private spinnerService:Ng4LoadingSpinnerService) {\n      this.employeeData.name = \"John Doe\";\n      this.employeeData.number = \"(312)-901-1723\";\n      this.employeeData.email = \"dkodipalli@hawk.iit.edu\";\n      this.employeeData.ssn = \"817263187236\";\n      this.employeeData.address = \"1307, 2951 S King Drive\";\n      this.employeeData.dept = \"Finance\";\n      this.employeeData.salary = 85000;\n   }\n\n  ngOnInit() {\n  }\n\n  public handleAddressChange1(event) {\n    console.log(event.formatted_address);\n    this.address = event.formatted_address;\n  }  \n  addEmployee(employeeData){\n    Swal({\n      title: 'Create new Employee: '+employeeData.name+'?',\n      text: 'This\\'ll Create a New Employee!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Create',\n      cancelButtonText: 'Cancel'\n    }).then((result) => {\n      employeeData.address = this.address;\n      this.employeeData.loginData = JSON.parse(localStorage.getItem(\"login\"));\n        this.http.addEmployee(this.employeeData).subscribe(\n          (response)=>{\n            console.log(response.json());\n            Swal(\n              'Employee Created!',\n              'Success'\n            ).then((newResult)=>{\n               this.rout.navigate(['/allEmployees']);\n            })\n          },(error)=>{\n            console.log(error);\n          })\n      },(error)=>{\n        console.log(error);\n      })    \n  }\n}\n","module.exports = \"<div class=\\\"example-viewer\\\">\\n  <div class=\\\"docs-example-viewer-wrapper\\\">\\n    <div class=\\\"docs-example-viewer-title\\\">\\n      <div class=\\\"docs-example-viewer-title-spacer\\\">\\n        Dashboard\\n      </div>\\n    </div>\\n    <div class=\\\"docs-example-viewer-source\\\">\\n      <div class=\\\"example-viewer\\\" style=\\\"display:flex;flex-direction:row;flex-wrap: wrap;justify-content: flex-start;\\\">\\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                Payments made Datewise\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n                <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>\\n                <div *ngIf=\\\"chart\\\">\\n                  <canvas id=\\\"canvas\\\">{{ chart }}</canvas>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                Employees Added monthwise\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n                <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>        \\n              <div *ngIf=\\\"chart\\\">\\n                <canvas id=\\\"canvas1\\\">{{ chart }}</canvas>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                Employees in a Company\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n              <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n              <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>        \\n            <div *ngIf=\\\"chart\\\">\\n              <canvas id=\\\"canvas2\\\">{{ chart }}</canvas>\\n            </div>\\n            </div>\\n          </div>\\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                Industry Type\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n                <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>        \\n              <div *ngIf=\\\"chart\\\">\\n                <canvas id=\\\"canvas3\\\">{{ chart }}</canvas>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                {{heading}}\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n                <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>        \\n              <div *ngIf=\\\"chart\\\">\\n                <canvas id=\\\"canvas4\\\">{{ chart }}</canvas>\\n              </div>\\n            </div>\\n          </div>          \\n          <div class=\\\"docs-example-viewer-wrapper\\\" style=\\\"width:32.5%;\\\">\\n            <div class=\\\"docs-example-viewer-title\\\">\\n              <div class=\\\"docs-example-viewer-title-spacer\\\">\\n                Total Payments Made\\n              </div>\\n            </div>\\n            <div class=\\\"docs-example-viewer-source\\\">\\n                <mat-progress-bar *ngIf=\\\"show\\\" color=\\\"accent\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n                <mat-spinner *ngIf=\\\"show\\\" color=\\\"accent\\\" diameter=\\\"20\\\" style=\\\"z-index:2;position:absolute;\\\"></mat-spinner>\\n                <div *ngIf=\\\"chart\\\">\\n                  <canvas id=\\\"canvas5\\\">{{ chart }}</canvas>\\n                </div>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../services/weather.service';\nimport { Chart } from 'chart.js';\nimport { AppComponent } from '../app.component';\nimport { RestService } from '../services/rest.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  chart = [];\n  show:boolean = true;\n\n  public labelsList:any = [];\n  public valuesList:any = [];\n  public deptLable:any = [];\n  public deptEmpCount:any = [];\n  public companyNameLabels:any = [];\n  public exployeeCount:any = [];\n  public dateLables:any = [];\n  public paymenntsMade:any = [];\n  public employeeCompanyNameLables:any = [];\n  public employeeCompanyContibutionsList:any = [];\n  public employee:boolean = true;\n  public heading:String = \"Employeewise Contribution\";\n  constructor(private _service: WeatherService, private app: AppComponent,private http: RestService) { \n    if(JSON.parse(localStorage.getItem(\"login\")).companyName === null){\n      window.location.reload();\n    }\n    this.http.getDashboardPaymentData({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n      (response)=>{\n        var dataList = response.json().data;\n        var keyArray= [];\n        var valueArray = [];\n        dataList.map(function(dataSet){\n          keyArray.push(dataSet.e_name);\n          valueArray.push(dataSet.contri);\n        })\n        this.labelsList = keyArray;\n        this.valuesList = valueArray;\n        this.http.getDeptEmployeeLists({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n          (response)=>{\n            var dataList1 = response.json().data;\n            var keyArray= [];\n            var valueArray = [];\n            dataList1.map(function(dataSet){\n              keyArray.push(dataSet.e_dept);\n              valueArray.push(dataSet.count);\n            })\n            this.deptLable = keyArray;\n            this.deptEmpCount = valueArray;\n            this.http.getEmployeeCompanyList().subscribe(\n              (response)=>{\n                console.log(response.json());\n                var dataList2 = response.json().data;\n                var keyArray= [];\n                var valueArray = [];\n                dataList2.map(function(dataSet){\n                  keyArray.push(dataSet.e_company_name);\n                  valueArray.push(dataSet.empCount);\n                })\n                this.companyNameLabels = keyArray;\n                this.exployeeCount = valueArray;\n                console.log(this.exployeeCount);\n                this.http.getMonthWisePayment({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n                  (response)=>{\n                    console.log(response.json());\n                    var dataList3 = response.json().data;\n                    var keyArray= [];\n                    var valueArray = [];\n                    dataList3.map(function(dataSet){\n                      keyArray.push(dataSet.date);\n                      valueArray.push(dataSet.count);\n                    })\n                    this.dateLables = keyArray;\n                    this.paymenntsMade = valueArray;\n                    if(JSON.parse(localStorage.getItem(\"login\")).username){\n                      this.employee = false;\n                      this.heading = \"Companywise Contributions\"\n                      console.log(JSON.parse(localStorage.getItem(\"login\")).username);\n                      this.http.getEmployeeCompany401KContriList({companyName:JSON.parse(localStorage.getItem(\"login\")).username}).subscribe(\n                        (response)=>{\n                          console.log(response.json());\n                          var dataList3 = response.json().data;\n                          var keyArray= [];\n                          var valueArray = [];\n                          dataList3.map(function(dataSet){\n                            keyArray.push(dataSet.m_company_name);\n                            valueArray.push(dataSet.contri);\n                          })\n                          this.employeeCompanyNameLables = keyArray;\n                          this.employeeCompanyContibutionsList = valueArray;    \n                        }                      \n                      )  \n                    }\n                    console.log(this.exployeeCount);\n                  }\n                )\n              }\n            )\n          },(error)=>{\n            console.log(error);\n          }\n        )              \n      },(error)=>{\n        console.log(error);\n      }\n    )          \n  }\n  \n  ngAfterViewInit(){\n    \n  }\n\n  ngOnInit() {\n\n    setTimeout(() => {\n      this.app.setLoggedIn();\n      this.app.show();\n    } , 0);\n    this.show = true;\n    this._service.dailyForecast()\n      .subscribe(res => {\n        \n        //console.log(res);\n        /*\n        let temp_max = res['list'].map(res => res.main.temp_max);\n        let temp_min = res['list'].map(res => res.main.temp_min);\n        let alldates = res['list'].map(res => res.dt)\n        */\n        let temp_max = ['10','20','30','40','50','60','70','80'];\n        let temp_min = ['0','1','2','3','4','5','6','7'];\n        //let alldates = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n        let alldates = [];\n        let weatherDates = []\n        alldates.forEach((res) => {\n            var jsdate = new Date();\n            weatherDates.push(jsdate.toLocaleTimeString('en', { year: 'numeric', month: 'short', day: 'numeric' }))\n        });\n        this.chart = new Chart('canvas', {\n          type: 'bar',\n          data: {\n              labels: this.dateLables,\n              datasets: [{\n                  label: '# of Payments Made',\n                  data: this.paymenntsMade,\n                  backgroundColor: [\n                      'rgba(255, 99, 132, 0.2)',\n                      'rgba(54, 162, 235, 0.2)',\n                      'rgba(255, 206, 86, 0.2)',\n                      'rgba(75, 192, 192, 0.2)',\n                      'rgba(153, 102, 255, 0.2)',\n                      'rgba(255, 159, 64, 0.2)'\n                  ],\n                  borderColor: [\n                      'rgba(255, 99, 132, 1)',\n                      'rgba(54, 162, 235, 1)',\n                      'rgba(255, 206, 86, 1)',\n                      'rgba(75, 192, 192, 1)',\n                      'rgba(153, 102, 255, 1)',\n                      'rgba(255, 159, 64, 1)'\n                  ],\n                  borderWidth: 1\n              }]\n          },\n          options: {\n              scales: {\n                  yAxes: [{\n                      ticks: {\n                          beginAtZero: true\n                      }\n                  }]\n              }\n          }        });\n        this.chart = new Chart('canvas1', {\n          type: 'bar',\n          data: {\n            labels: [\"Jan\",\"Jun\",\"Dec\"],\n            datasets: [{\n              label: \"Employee Added\",\n              data: [28, 64, 56],\n              backgroundColor: ['#F79F79','#F7D08A']\n          }]\n          }\n        });\n        this.chart = new Chart('canvas2', {\n          type: 'pie',\n          data: {\n            datasets: [{\n                data: this.exployeeCount,\n                backgroundColor: ['#F79F79','#F7D08A','#E3F09B','#87B6A7', '#5B5941']\n            }],\n            labels: this.companyNameLabels\n        },\n          options: {\n          }\n        });\n        this.chart = new Chart('canvas3', {\n          type: 'doughnut',\n          data: {\n            datasets: [{\n                data: this.deptEmpCount,\n                backgroundColor: ['#F79F79','#F7D08A','#E3F09B','#87B6A7', '#5B5941']\n            }],\n        \n            // These labels appear in the legend and in the tooltips when hovering different arcs\n            labels: this.deptLable\n        },\n          options: {\n          }\n        });\n        console.log(JSON.parse(localStorage.getItem(\"login\")));\n        if(JSON.parse(localStorage.getItem(\"login\")).companyName){\n          this.heading = \"Employeewise Contribution\";;\n          console.log(\"This is Company\");\n          this.chart = new Chart('canvas4', {\n            type: 'polarArea',\n            data: {\n              datasets: [{\n                  data: this.valuesList,                  \n                  backgroundColor: ['#F79F79','#F7D08A','#E3F09B','#87B6A7', '#5B5941']\n              }],\n          \n              // These labels appear in the legend and in the tooltips when hovering different arcs\n              labels: this.labelsList\n          },\n            options: {\n            }\n          });  \n        }else{\n          this.heading = \"Companywise Distribution\";\n          console.log(\"This is User/Employee\");\n          this.chart = new Chart('canvas4', {\n            type: 'polarArea',\n            data: {\n              datasets: [{\n                  data: this.employeeCompanyContibutionsList,\n                  backgroundColor: ['#F79F79','#F7D08A','#E3F09B','#87B6A7', '#5B5941']\n              }],\n              labels: this.employeeCompanyNameLables\n          },\n            options: {\n            }\n          });          \n        }\n        this.chart = new Chart('canvas5', {\n          type: 'line',\n          data: {\n            labels: weatherDates,\n            datasets: [\n              { \n                data: temp_max,\n                borderColor: \"#3cba9f\",\n                fill: false\n              },\n              { \n                data: temp_min,\n                borderColor: \"#ffcc00\",\n                fill: false\n              },\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                display: true\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n        this.show = false;\n      },(error)=>{\n        console.log(error);\n      });\n  }\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      this.app.hide();\n    } , 0);\n  }\n\n}\n","module.exports = \"<!-- https://angular.io/tutorial/toh-pt5 -->\\n<header style=\\\"position:relative;z-index:1;\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\">\\n      <button mat-button><mat-icon>attach_money</mat-icon> Manage 401(K)</button>\\n      <ng-container *ngIf=\\\"role=='admin'; else elseTemplate\\\">\\n        <button mat-button>Application Admin</button>\\n      </ng-container>\\n      <ng-template #elseTemplate>\\n          <ng-container *ngIf=\\\"role=='company'; else else1Template\\\">\\n            <button mat-button>Company Admin</button>\\n          </ng-container>\\n      </ng-template>\\n      <ng-template #else1Template>\\n        <ng-container *ngIf=\\\"role=='employee';\\\">\\n          <button mat-button>Employee</button>\\n        </ng-container>\\n    </ng-template>\\n\\n      <span class=\\\"example-spacer\\\"></span>\\n            <span style=\\\"font-size: 16px\\\">\\n              <button mat-button><mat-icon>my_location</mat-icon> <span>&nbsp;{{city}},{{state}} | {{email}}</span></button>\\n            </span>\\n      <button mat-button style=\\\"margin-left: 2%\\\">{{actualDate}}</button>\\n      <button style=\\\"margin-left: 2%\\\" mat-button [matMenuTriggerFor]=\\\"notifications\\\"><mat-icon matBadge=\\\"3\\\" matBadgeColor=\\\"accent\\\" matBadgePosition=\\\"above before\\\">notifications</mat-icon></button>\\n      <mat-menu #notifications=\\\"matMenu\\\">\\n        <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"hideMenu()\\\">Dummy Notification #1</button>\\n        <mat-divider></mat-divider>\\n        <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"hideMenu()\\\">Dummy Notification #2</button>\\n        <mat-divider></mat-divider>\\n        <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"hideMenu()\\\">Dummy Notification #3</button>\\n        <mat-divider></mat-divider>\\n        <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"hideMenu()\\\">more</button>\\n      </mat-menu>\\n      <button mat-button [matMenuTriggerFor]=\\\"profile\\\"><mat-icon>account_circle</mat-icon> {{user}} <mat-icon>arrow_drop_down</mat-icon></button>\\n        <mat-menu #profile=\\\"matMenu\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"changeProfile()\\\"><mat-icon>perm_identity</mat-icon>Update Profile</button>\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/\\\" mat-menu-item (click)=\\\"changePassword()\\\"><mat-icon>lock</mat-icon>Change Password</button>\\n          <button (click)=\\\"logout()\\\" mat-menu-item><mat-icon>power_settings_new</mat-icon>Logout</button>\\n        </mat-menu>\\n        <button mat-button><mat-icon matTooltip=\\\"Info\\\">help</mat-icon></button>\\n    </mat-toolbar>\\n</header>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { formatDate } from '@angular/common';\nimport { RestService } from '../services/rest.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  private role:string;\n  private city:string;\n  private state:string;\n  private user:String = \"\";\n  private actualDate:String = \"\";\n  private email:String = \"\";\n\n  constructor(private route: Router, private http:RestService) { \n    var todaysDate = new Date();\n    var todayFormat = formatDate(todaysDate, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n    console.log(todayFormat);\n    var date:any = todayFormat.split(\" \");\n    console.log(date);\n    console.log(date[0].split(\"-\"));\n    var splitDate = date[0].split(\"-\");\n    var day = splitDate[0];\n    var monthNumber = splitDate[1];\n    var montha:String = \"\";\n    if(monthNumber.toString().length === 1){\n      montha = \"0\"+monthNumber;\n    }else{\n      montha = monthNumber.toString();\n    }\n    console.log(montha);\n    console.log(monthNumber);\n    var monthText = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n    var month;\n    switch (montha.toString()) {\n      case \"01\": month = monthText[0] ; break\n      case \"02\": month = monthText[1] ; break\n      case \"03\": month = monthText[2] ; break\n      case \"04\": month = monthText[3] ; break\n      case \"05\": month = monthText[4] ; break\n      case \"06\": month = monthText[5] ; break\n      case \"07\": month = monthText[6] ; break\n      case \"08\": month = monthText[7] ; break\n      case \"09\": month = monthText[8] ; break\n      case \"10\": month = monthText[9] ; break\n      case \"11\": month = monthText[10] ; break\n      default: month = monthText[11] ; break\n    }\n         this.actualDate = day+\"-\"+month+\"-\"+splitDate[2];\n         console.log(this.actualDate);\n  }\n  ngOnInit() {\n    var loginData = JSON.parse(localStorage.getItem(\"login\"));\n    this.role = loginData.role;\n    this.user = loginData.userName;\n    this.city = loginData.city;\n    this.state = loginData.state;\n    this.email = loginData.companyName;\n    console.log(\"Header role is \"+this.role);\n  }\n\n  logout(){\n    console.log(JSON.parse(localStorage.getItem(\"login\")).username);\n    this.http.signOut({username:JSON.parse(localStorage.getItem(\"login\")).username}).subscribe(\n      (response)=>{\n        console.log(response.json())\n        localStorage.clear();\n        this.route.navigate(['login']);\n        window.location.reload();\n        window.location.reload();\n      },(error)=>{\n        console.log(error);\n      })\n  }\n  changePassword(){\n    console.log(\"UpdatePassword\");\n    this.route.navigate(['passwordUpdate']);    \n  }\n  changeProfile(){\n    console.log(\"profileUpdate\")\n    this.route.navigate(['profileUpdate']);\n  }\n}\n","module.exports = \"<!-- <body id=\\\"particles-js\\\">     -->\\n  <body>\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"login-wrap\\\">\\n          <div class=\\\"login-html\\\">\\n            <input id=\\\"tab-1\\\" type=\\\"radio\\\" name=\\\"tab\\\" class=\\\"sign-in\\\" checked><label style=\\\"color: white\\\" for=\\\"tab-1\\\" class=\\\"tab\\\">Sign In</label>\\n            <input id=\\\"tab-2\\\" type=\\\"radio\\\" name=\\\"tab\\\" class=\\\"sign-up\\\"><label for=\\\"tab-2\\\" style=\\\"color: white\\\" class=\\\"tab\\\"></label>\\n            <div class=\\\"login-form\\\">\\n              <div [hidden]=\\\"!otpBoolean\\\" class=\\\"sign-in-htm\\\">\\n                <div class=\\\"group\\\">\\n                  <label for=\\\"user\\\" class=\\\"label\\\" style=\\\"color: white\\\">Username</label>\\n                  <input id=\\\"user\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"Enter Username\\\" [(ngModel)]=\\\"loginData.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"color: white\\\">\\n                </div>\\n                <div class=\\\"group\\\">\\n                  <label for=\\\"pass\\\" class=\\\"label\\\" style=\\\"color: white\\\">Password</label>\\n                  <input id=\\\"pass\\\" type=\\\"password\\\" class=\\\"input\\\" data-type=\\\"password\\\" placeholder=\\\"Enter Password\\\" [(ngModel)]=\\\"loginData.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"color: white\\\">\\n                </div>\\n                <div class=\\\"group\\\">\\n                  <label for=\\\"pass\\\" class=\\\"label\\\" style=\\\"color: white\\\">Role</label>\\n                    <select style=\\\"color: white\\\" class=\\\"input\\\" [(ngModel)]=\\\"loginData.role\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <option style=\\\"color: black\\\" value=\\\"admin\\\">Application Admin</option>\\n                      <option style=\\\"color: black\\\" value=\\\"company\\\">Company Representative</option>\\n                      <option style=\\\"color: black\\\" value=\\\"employee\\\">Employee</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"group\\\">\\n                  <input id=\\\"check\\\" type=\\\"checkbox\\\" class=\\\"check\\\" checked>\\n                  <label for=\\\"check\\\" style=\\\"color: white\\\"><span class=\\\"icon\\\"></span> Keep me Signed in</label>\\n                </div>\\n                <div class=\\\"group\\\">\\n                  <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Sign In\\\" (click)=\\\"login(loginData)\\\">\\n                </div>\\n                <div class=\\\"hr\\\"></div>\\n                <div class=\\\"foot-lnk\\\">\\n                  <a href=\\\"#forgot\\\" style=\\\"color: white\\\">Forgot Password?</a>\\n                </div>\\n              </div>\\n              <div [hidden]=\\\"otpBoolean\\\" style=\\\"margin-top: 25%\\\">\\n                <div class=\\\"group\\\">\\n                  <label for=\\\"user\\\" class=\\\"label\\\" style=\\\"color: white\\\">OTP</label>\\n                  <input id=\\\"user\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"Enter OTP Received\\\" [(ngModel)]=\\\"loginData.otp\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"color: white\\\">\\n                </div>\\n                <div class=\\\"group\\\">\\n                  <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Verify OTP\\\" (click)=\\\"submitOTP()\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>  \\n  </div>\\n</body>\"","module.exports = \"body {\\n  margin: 0;\\n  color: #08475A;\\n  background: #08475A;\\n  font: 600 16px/18px 'Open Sans',sans-serif;\\n  background: url(https://www.ibm.com/blogs/blockchain/wp-content/uploads/2019/01/Retina_Display-816838496.jpg) no-repeat center; }\\n\\n/* http://eskipaper.com/images/world-map-wallpaper-10.jpg\\r\\n       https://images.alphacoders.com/247/247891.png \\r\\n       https://img00.deviantart.net/10ac/i/2013/238/c/9/minimalistic_world_map_by_schub3rt-d6jtorn.jpg\\r\\n    */\\n\\n*, :after, :before {\\n  box-sizing: border-box; }\\n\\n.clearfix:after, .clearfix:before {\\n  content: '';\\n  display: table; }\\n\\n.clearfix:after {\\n  clear: both;\\n  display: block; }\\n\\na {\\n  color: inherit;\\n  text-decoration: none; }\\n\\ninput:focus {\\n  outline: none; }\\n\\n.container-fluid {\\n  height: 100vh;\\n  display: flex;\\n  background: rgba(0, 0, 0, 0.5); }\\n\\n.login-wrap {\\n  opacity: .95;\\n  width: 80%;\\n  margin: auto;\\n  max-width: 525px;\\n  min-height: 570px;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  position: relative;\\n  /* background:url(https://raw.githubusercontent.com/khadkamhn/day-01-login-form/master/img/bg.jpg) no-repeat center; */\\n  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19); }\\n\\n.login-html {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  padding: 40px 70px 50px 70px;\\n  background: #08475A; }\\n\\n.login-html .sign-in-htm,\\n.login-html .sign-up-htm {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n  -webkit-transform: rotateY(180deg);\\n          transform: rotateY(180deg);\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  transition: all .4s linear; }\\n\\n.login-html .sign-in,\\n.login-html .sign-up,\\n.login-form .group .check {\\n  display: none; }\\n\\n.login-html .tab,\\n.login-form .group .label,\\n.login-form .group .button {\\n  text-transform: uppercase; }\\n\\n.login-html .tab {\\n  font-size: 22px;\\n  margin-right: 15px;\\n  padding-bottom: 5px;\\n  margin: 0 15px 10px 0;\\n  display: inline-block;\\n  cursor: pointer;\\n  border-bottom: 2px solid transparent; }\\n\\n.login-html .sign-in:checked + .tab,\\n.login-html .sign-up:checked + .tab {\\n  color: #fff;\\n  border-color: #1161ee; }\\n\\n.login-form {\\n  min-height: 345px;\\n  position: relative;\\n  -webkit-perspective: 1000px;\\n          perspective: 1000px;\\n  -webkit-transform-style: preserve-3d;\\n          transform-style: preserve-3d; }\\n\\n.login-form .group {\\n  margin-bottom: 15px; }\\n\\n.login-form .group .label,\\n.login-form .group .input,\\n.login-form .group .button {\\n  width: 100%;\\n  color: #fff;\\n  display: block; }\\n\\n.login-form .group .input,\\n.login-form .group .button {\\n  border: none;\\n  padding: 15px 20px;\\n  border-radius: 25px;\\n  background: rgba(255, 255, 255, 0.1); }\\n\\n.login-form .group input[data-type=\\\"password\\\"] {\\n  text-security: circle;\\n  -webkit-text-security: circle; }\\n\\n.login-form .group .label {\\n  color: #aaa;\\n  font-size: 12px; }\\n\\n.login-form .group .button {\\n  background: #1161ee; }\\n\\n.login-form .group label .icon {\\n  width: 15px;\\n  height: 15px;\\n  border-radius: 2px;\\n  position: relative;\\n  display: inline-block;\\n  background: rgba(255, 255, 255, 0.1); }\\n\\n.login-form .group label .icon:before,\\n.login-form .group label .icon:after {\\n  content: '';\\n  width: 10px;\\n  height: 2px;\\n  background: #fff;\\n  position: absolute;\\n  transition: all .2s ease-in-out 0s; }\\n\\n.login-form .group label .icon:before {\\n  left: 3px;\\n  width: 5px;\\n  bottom: 6px;\\n  -webkit-transform: scale(0) rotate(0);\\n          transform: scale(0) rotate(0); }\\n\\n.login-form .group label .icon:after {\\n  top: 6px;\\n  right: 0;\\n  -webkit-transform: scale(0) rotate(0);\\n          transform: scale(0) rotate(0); }\\n\\n.login-form .group .check:checked + label {\\n  color: #fff; }\\n\\n.login-form .group .check:checked + label .icon {\\n  background: #1161ee; }\\n\\n.login-form .group .check:checked + label .icon:before {\\n  -webkit-transform: scale(1) rotate(45deg);\\n          transform: scale(1) rotate(45deg); }\\n\\n.login-form .group .check:checked + label .icon:after {\\n  -webkit-transform: scale(1) rotate(-45deg);\\n          transform: scale(1) rotate(-45deg); }\\n\\n.login-html .sign-in:checked + .tab + .sign-up + .tab + .login-form .sign-in-htm {\\n  -webkit-transform: rotate(0);\\n          transform: rotate(0); }\\n\\n.login-html .sign-up:checked + .tab + .login-form .sign-up-htm {\\n  -webkit-transform: rotate(0);\\n          transform: rotate(0); }\\n\\n.hr {\\n  height: 2px;\\n  margin: 20px 0 20px 0;\\n  background: rgba(255, 255, 255, 0.2); }\\n\\n.foot-lnk {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Router } from '@angular/router';\n\nimport { RestService } from '../services/rest.service';\ndeclare var particlesJS: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error:string=\"\";\n   myStyle: object = {};\n    myParams: object = {};\n    width: number = 100;\n    height: number = 100;\n  private loginData:any = {};\n  private signUpData:any = {};\n  private otpBoolean:boolean = true;\n  private productList:any = []; \n  constructor(private app: AppComponent,\n            private http: RestService,\n            private router: Router ) {\n            }\n\n  ngOnInit() {\n    particlesJS.load('particles-js', './src/assets/data/particles.json', null);\n\n    this.loginData.username = \"admin@manage401k.com\";\n    this.loginData.password = \"password\";\n    this.loginData.usertype = \"application_admin\";    \n  }\n\n  login(loginData){\n    loginData.city = \"Chicago\";\n    loginData.state = \"Illinois\";\n    console.log(loginData);\n    if(loginData.role === \"admin\"){\n      loginData.role = \"Application Admin\";\n      this.http.signIn(loginData).subscribe(\n        (response)=>{\n          console.log(response.json());\n          loginData.role = response.json().role;\n          console.log(loginData);\n          localStorage.setItem(\"login\",JSON.stringify(loginData));\n          this.router.navigate(['/dashboard']);\n        },(error)=>{\n          console.log(error);\n        })\n    }else if(loginData.role === \"company\"){\n      this.loginData.role = \"Company Representative\";\n      console.log(\"Company Login\");\n      this.http.companySignIn(this.loginData).subscribe(\n        (response)=>{\n          console.log(response.json());\n          loginData.role = response.json().role;\n          console.log(this.loginData);\n          this.loginData.companyName = response.json().companyName;\n          this.otpBoolean = false;\n/*          localStorage.setItem(\"login\",JSON.stringify(loginData));\n          this.router.navigate(['/dashboard']);*/\n        },(error)=>{\n          console.log(error);\n        })\n    }else{\n      loginData.role = \"Employee\";\n      console.log(\"Employee\")\n      this.http.employeeSignIn(this.loginData).subscribe(\n        (response)=>{\n          console.log(response.json());\n          loginData.role = response.json().role;\n          console.log(this.loginData);\n          this.otpBoolean = false;\n        },(error)=>{\n          console.log(error);\n        })\n    }\n  }\n\nsubmitOTP(){\n  if(this.loginData.otp){\n    this.http.checkOTPCompany(this.loginData).subscribe(\n      (response)=>{\n        console.log(response.json());\n        localStorage.setItem(\"login\",JSON.stringify(this.loginData));\n        this.router.navigate(['/dashboard']);\n      },(error)=>{\n        console.log(error);\n      }\n    )\n  }\n}\n}","module.exports = \"<div class=\\\"mat-elevation-z6\\\">\\n  <mat-toolbar>\\n      <button mat-button class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">Dashboard</button>\\n\\n      <button mat-button [matMenuTriggerFor]=\\\"dataexplorer\\\">Employee Operations <mat-icon>arrow_drop_down</mat-icon></button>\\n\\n      <mat-menu #dataexplorer=\\\"matMenu\\\" >\\n        <span *ngIf=\\\"role=='admin';\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/addCompanies\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>business</mat-icon>Add a Company</button>\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/allCompanies\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>location_city</mat-icon>View Companies</button>\\n        </span>\\n        <span *ngIf=\\\"role=='company';\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/addEmployee\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>remove_red_eye</mat-icon>Add Employee</button>\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/allEmployees\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>person_pin</mat-icon>View Employee</button>        \\n        </span>\\n        <span *ngIf=\\\"role=='employee';\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/allEmployeesEmployee\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>person_pin</mat-icon>View Employee</button>        \\n          <button class=\\\"nav-link\\\" routerLink=\\\"/allEmployeePayments\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>payment</mat-icon>View Monthly Payments</button>        \\n        </span>        \\n      </mat-menu>\\n    \\n<!--       <button mat-button class=\\\"nav-link\\\" routerLink=\\\"/datamanagement\\\" (click)=\\\"hideMenu()\\\">Data Management </button>\\n -->    \\n    <span  *ngIf=\\\"role=='company';\\\">\\n      <button mat-button [matMenuTriggerFor]=\\\"reports\\\">Transfer Operations<mat-icon>arrow_drop_down</mat-icon></button>\\n      <mat-menu #reports=\\\"matMenu\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/recordPayment\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>attach_money</mat-icon>Add Payment</button>        \\n          <button class=\\\"nav-link\\\" routerLink=\\\"/allPayments\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>payment</mat-icon>View Payments</button>        \\n      </mat-menu>\\n    </span>\\n      <button mat-button [matMenuTriggerFor]=\\\"admin\\\">Help <mat-icon>arrow_drop_down</mat-icon></button>\\n      <mat-menu #admin=\\\"matMenu\\\">\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/payment\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>help</mat-icon>Help</button>\\n          <button class=\\\"nav-link\\\" routerLink=\\\"/buyerpayment\\\" mat-menu-item (click)=\\\"hideMenu()\\\"><mat-icon>settings_application</mat-icon>Settings</button>        \\n      </mat-menu>\\n    \\n    </mat-toolbar>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  private role:any = \"\";\n  constructor(private rout:Router) { }\n\n  ngOnInit() {\n    var loginData = JSON.parse(localStorage.getItem(\"login\"));\n    this.role = loginData.role;    \n  }\n\n  showUsers(user){\n    if(user === 'buyer'){\n      this.rout.navigate(['/users']);\n    }else{\n      this.rout.navigate(['/sellers']);\n    }\n  }\n}\n","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-row {\\n  background-color: white; }\\n\\n.mat-row:hover {\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n.art-boxshadow {\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12); }\\n\\n.art-pad30 {\\n  padding: 10px 30px 10px 30px; }\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort, MatTableDataSource} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\nimport Swal from 'sweetalert2'\nimport { Router } from '@angular/router';\nimport { RestService } from '../services/rest.service';\n\nexport interface Companies {\n  name: string;\n  ssn: string;\n  number: string;\n  email: string;\n  department: string;\n  address: string;\n  salary: string;\n  contri401K: string;\n}\n\nconst ELEMENT_DATA: Companies[] = [\n];\n\n@Component({\n  selector: 'app-recordPayment',\n  templateUrl: './recordPayment.html',\n  styleUrls: ['./recordPayment.component.scss']\n})\nexport class RecordPaymentComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'ssn', 'number', 'email', 'department', 'address', 'salary', 'contri401K','actionRe'];\n  dataSource:any = new MatTableDataSource<Companies>(ELEMENT_DATA);\n  selection = new SelectionModel<Companies>(true, []);\n\n  \n  @Input() changing: Subject<boolean>;\n\n  loadGridSpinner:boolean = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private http: RestService, private route: Router) { }\n  private fileUrl:string\n  private forEmployee:boolean = true;\n  private role:String;\n  private createInvoice:any = {};\n  private searchParams:any = {};\n  private allList:boolean = false;\n  private ename:String = \"\";\n  private eaddress:String = \"\";\n  private essn:String = \"\";\n  private ecompany:String = \"\";\n  private ecompanyid:String = \"\";\n  private edepartment:String = \"\";\n  private esalary = 0.0;\n  private esalarymonthly = 0.0;\n  private e401k = 0.0;\n  private esalary401k = 0.0;\n  private esalary401kmonthly = 0.0;\n  private enumber:String = \"\";\n  private eemail:String = \"\";\n\n  ngOnInit() {\n    var data = [];\n      this.http.getEmployees({companyName:JSON.parse(localStorage.getItem(\"login\")).companyName}).subscribe(\n        (response)=>{\n          console.log(response.json());\n          data = response.json().data;\n          data.map(function(dataItem){\n            dataItem.e_contri401K = dataItem.e_salary - dataItem.e_salary*(1-(dataItem.e_401K_contribution/100));\n          })\n          console.log(data);\n          this.dataSource = new MatTableDataSource<Companies>(data);      \n        },(error)=>{\n          console.log(error);\n        });\n  }\n  makePayment(forRecord){\n    console.log(forRecord);\n    this.allList = true;\n    this.ename = forRecord.e_name;\n    this.essn = forRecord.e_ssn;\n    this.eaddress = forRecord.e_address;\n    this.ecompany = forRecord.e_company_name;\n    this.ecompanyid = forRecord.e_company_id;\n    this.edepartment = forRecord.e_dept;\n    this.esalary = forRecord.e_salary;\n    this.esalarymonthly = forRecord.e_salary/12;\n    this.esalarymonthly = Math.round(this.esalarymonthly * 100) / 100;\n    this.e401k = forRecord.e_401K_contribution;\n    this.esalary401k = forRecord.e_contri401K;\n    this.esalary401kmonthly = this.esalary401k/12;\n    this.esalary401kmonthly = Math.round(this.esalary401kmonthly * 100) / 100;\n    this.enumber = forRecord.e_contact_number;\n    this.eemail = forRecord.e_contact_email;\n  }\n  recordPayment(){\n    Swal({\n      title: 'Record the payment for: '+this.ename+'?',\n      text: 'This\\'ll Record a Payment!',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Record',\n      cancelButtonText: 'Cancel'\n    }).then((result) => {\n      var paymentObj:any = {};\n      paymentObj.m_company_name = this.ecompany;\n      paymentObj.m_company_id = this.ecompanyid;\n      paymentObj.m_employee_ssn = this.essn;\n      paymentObj.m_salary = this.esalary;\n      paymentObj.e_email = this.eemail;\n      paymentObj.e_name = this.ename;\n      paymentObj.m_salary_monthly = this.esalarymonthly;\n      paymentObj.m_contribution_to_401k = this.esalary401kmonthly;\n      paymentObj.e401k = this.e401k;\n      console.log(paymentObj);\n      this.http.recordPayment(paymentObj).subscribe(\n        (response)=>{\n          console.log(response.json());\n          Swal(\n            'Payment Recorded for: '+\n            this.ename\n          ).then((newResult)=>{\n             this.route.navigate(['/allPayments']);\n          })   \n        },(error)=>{\n          console.log(error);\n        }\n      )\n    })\n  }\n}","module.exports = \"<div [hidden]=\\\"allList\\\">\\n    <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            Employee Search\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            \\n            <form class=\\\"art-pad30\\\">\\n                <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"searchParams.companyName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Number\\\" [(ngModel)]=\\\"searchParams.number\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                          </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"searchParams.dept\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"SSN\\\" [(ngModel)]=\\\"searchParams.ssn\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                    <mat-grid-tile>\\n                        <mat-form-field style=\\\"width:90%;\\\">\\n                            <input matInput placeholder=\\\"Salary\\\" [(ngModel)]=\\\"searchParams.salary\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n                  </mat-grid-list>  \\n                  <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"invoiceSearch(searchParams)\\\">Search</button>            \\n              </form>\\n        </div>\\n      </div>\\n  </div>\\n  <div class=\\\"example-viewer\\\">\\n      <div class=\\\"docs-example-viewer-wrapper\\\">\\n        <div class=\\\"docs-example-viewer-title\\\">\\n          <div class=\\\"docs-example-viewer-title-spacer\\\">\\n            All Employees Grid\\n          </div>\\n        </div>\\n        <div class=\\\"docs-example-viewer-source\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"name\\\" (click)=\\\"makePayment(element)\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"makePayment(element)\\\"></a> {{element.e_name}} </td>\\n                  </ng-container>\\n                            \\n                <!-- Amount Column -->\\n                <ng-container matColumnDef=\\\"ssn\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> SSN </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_ssn}} </td>\\n                </ng-container>\\n              \\n                <!-- Seller ID Column -->\\n                <ng-container matColumnDef=\\\"number\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Number </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_contact_number}} </td>\\n                </ng-container>\\n              \\n                <!-- Banker ID Column -->\\n                <ng-container matColumnDef=\\\"email\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_contact_email}} </td>\\n                </ng-container>\\n\\n                <!-- Created Date Column -->\\n                <ng-container matColumnDef=\\\"department\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_dept}} </td>\\n                </ng-container>\\n\\n                <!-- Status Column -->\\n                <ng-container matColumnDef=\\\"address\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.e_address}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"salary\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Salary </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_salary}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"contri401K\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> 401K(per year) </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> $ {{element.e_contri401K}} </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"actionRe\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> <button class='btn btn-primary' (click)=\\\"makePayment(element)\\\">Record Payment</button> </td>\\n                </ng-container>\\n\\n                <!-- Invoice Number Column -->\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                (click)=\\\"selection.toggle(row)\\\" (dblclick)=\\\"addTab(row)\\\">\\n                </tr>\\n              </table>\\n              <!--(click)=\\\"selection.toggle(row)\\\"-->\\n            <mat-paginator class=\\\"art-boxshadow\\\" [length]=\\\"100\\\"\\n                [pageSize]=\\\"10\\\"\\n                [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n            </mat-paginator>\\n            <mat-toolbar style=\\\"position:relative;z-index:0;width:60%;height:56px;margin-top:-56px;margin-left:10px;background-color:#fff;\\\">\\n            \\n                <button mat-button [matMenuTriggerFor]=\\\"actions\\\">Actions<mat-icon class=\\\"example-icon\\\">arrow_drop_down</mat-icon></button>\\n\\n                <mat-menu #actions=\\\"matMenu\\\">\\n                  <button mat-menu-item (click)=\\\"createInvoiceDirectly()\\\">View More Details</button>\\n                  <button mat-menu-item >Cancel Ride</button>\\n                </mat-menu>              \\n              </mat-toolbar>\\n        </div>\\n      </div>\\n  </div>\\n</div>\\n<div [hidden]=\\\"!allList\\\">\\n  <div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Employee Details\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n          \\n          <form class=\\\"art-pad30\\\">\\n              <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Employee Name\\\" [(ngModel)]=\\\"ename\\\" style=\\\"color: black\\\"  [disabled]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Employeee SSN\\\" [(ngModel)]=\\\"essn\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Employee Address\\\" [(ngModel)]=\\\"eaddress\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                  </mat-grid-tile>\\n              </mat-grid-list>\\n              <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n                <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"ecompany\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"Company ID \\\" [(ngModel)]=\\\"ecompanyid\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"Department\\\" [(ngModel)]=\\\"edepartment\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n                </mat-grid-tile>\\n            </mat-grid-list>\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <input matInput placeholder=\\\"Employee Contact Number\\\" [(ngModel)]=\\\"enumber\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <input matInput placeholder=\\\"Employee Contact Email\\\" [(ngModel)]=\\\"eemail\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n          </mat-grid-list>            \\n            </form>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"example-viewer\\\">\\n    <div class=\\\"docs-example-viewer-wrapper\\\">\\n      <div class=\\\"docs-example-viewer-title\\\">\\n        <div class=\\\"docs-example-viewer-title-spacer\\\">\\n          Salary Details\\n        </div>\\n      </div>\\n      <div class=\\\"docs-example-viewer-source\\\">\\n        <div class=\\\"docs-example-viewer-source\\\">\\n          \\n          <form class=\\\"art-pad30\\\">\\n              <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"Annual Income (in $)\\\" [(ngModel)]=\\\"esalary\\\" style=\\\"color: black\\\" [disabled]=\\\"true\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                      <mat-form-field style=\\\"width:90%;\\\">\\n                          <input matInput placeholder=\\\"401(K) Contribution (in %)\\\" [(ngModel)]=\\\"e401k\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                        </mat-form-field>\\n                  </mat-grid-tile>\\n                  <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"401K Contribition (in $)\\\" [(ngModel)]=\\\"esalary401k\\\" [disabled]=\\\"true\\\" style=\\\"color: black\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                </mat-grid-tile>                  \\n              </mat-grid-list>\\n              <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n                <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"Monthly Income \\\" [(ngModel)]=\\\"esalarymonthly\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                      </mat-form-field>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <mat-form-field style=\\\"width:90%;\\\">\\n                        <input matInput placeholder=\\\"Monthly Contribution Towards 401(K)\\\" [(ngModel)]=\\\"esalary401kmonthly\\\" [ngModelOptions]=\\\"{standalone: true}\\\" value=\\\"\\\">\\n                    </mat-form-field>\\n                  </mat-grid-tile>\\n              </mat-grid-list>\\n              <div style=\\\"text-align: center; margin-bottom: 40px;\\\">\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"recordPayment()\\\">\\n                  Record Payment\\n                </button>    \\n              </div>\\n            <!-- <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"100px\\\">\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"recordPayment()\\\">\\n                        Record Payment\\n                      </button>\\n                    </mat-form-field>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                  <mat-form-field style=\\\"width:90%;\\\">\\n                    <button class=\\\"btn btn-danger\\\">\\n                      Cancel\\n                    </button>\\n                </mat-form-field>\\n              </mat-grid-tile>\\n          </mat-grid-list> -->\\n\\n            </form>\\n      </div>\\n      </div>\\n    </div>\\n</div>\\n\\n</div>\"","import { Injectable } from '@angular/core';\nimport { Http,ResponseContentType } from '@angular/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  private loginData:any = {};  \n  constructor(private http: Http) {\n      this.loginData = localStorage.getItem(\"login\")  \n  }\n\n  SignUp(signUpData){\n    return this.http.post(\"http://192.168.0.21:3000/signup\",signUpData,{withCredentials: true});\n  }  \n  signIn(signInData){\n    return this.http.post(\"http://localhost:3000/login\", signInData,{withCredentials: true});\n  }\n  companySignIn(signInCompanyData){\n    return this.http.post(\"http://localhost:3000/company/companyLogin\", signInCompanyData,{withCredentials: true});    \n  }\n  employeeSignIn(employeeSignInData){\n    return this.http.post(\"http://localhost:3000/employee/employeeLogin\", employeeSignInData,{withCredentials: true});    \n  }\n  checkOTPCompany(otp){\n    console.log(otp);\n    return this.http.post(\"http://localhost:3000/company/checkOTP\", otp,{withCredentials: true});    \n  }\n  signOut(logoutData){\n    return this.http.post(\"http://localhost:3000/logout\", logoutData,{withCredentials: true});\n  }\n  addCompany(companyData){\n    console.log(companyData);\n    return this.http.post(\"http://localhost:3000/addCompany\", companyData,{withCredentials: true});\n  }\n  addEmployee(employeeData){\n    console.log(employeeData);\n    return this.http.post(\"http://localhost:3000/company/addEmployee\", employeeData,{withCredentials: true});\n  }\n  getEmployees(companyObj){\n    return this.http.post(\"http://localhost:3000/company/getEmployees\",companyObj,{withCredentials: true});\n  }\n  getEmployeesForEmployee(companyObj){\n    return this.http.post(\"http://localhost:3000/employee/getEmployees\",companyObj,{withCredentials: true});\n  }\n  getPayments(paymentObj){\n    return this.http.post(\"http://localhost:3000/company/getAllPayments\",paymentObj,{withCredentials: true});\n  }  \n  getPaymentsEmployee(paymentEmployeeObj){\n    console.log(paymentEmployeeObj);\n    return this.http.post(\"http://localhost:3000/employee/getAllEmployeePayments\",paymentEmployeeObj,{withCredentials: true});\n  }\n  getCompanies(){\n    return this.http.get(\"http://localhost:3000/getCompanies\",{withCredentials: true});\n  }\n  recordPayment(paymentData){\n    return this.http.post(\"http://localhost:3000/company/makePayment\",paymentData,{withCredentials: true});\n  }\n  update401K(updateData){\n    return this.http.post(\"http://localhost:3000/employee/updateRecord\",updateData,{withCredentials: true});\n  }\n  getDashboardPaymentData(companyInfo){\n    return this.http.post(\"http://localhost:3000/company/usersContri\",companyInfo,{withCredentials: true});    \n  }\n  getDeptEmployeeLists(companyInfo){\n    return this.http.post(\"http://localhost:3000/company/getDeptEmployeeLists\",companyInfo,{withCredentials: true});    \n  }\n  getEmployeeCompanyList(){\n    return this.http.get(\"http://localhost:3000/company/getEmployeeCompanyList\",{withCredentials: true});\n  }\n  getMonthWisePayment(companyInfo){\n    return this.http.post(\"http://localhost:3000/company/getMonthWisePayment\",companyInfo,{withCredentials: true});    \n  }\n  getEmployeeCompany401KContriList(employeeInfo){\n    return this.http.post(\"http://localhost:3000/company/getEmployeeCompany401KContriList\",employeeInfo,{withCredentials: true});    \n  }\n}\n\n/*curl -X POST -d \"{\"username\":\"maneeshd\",\"password\":\"qwerty\",\"usertype\":\"customer\"}\" http://104.194.106.22:80/rideshare/Login*/\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private _http: Http) { }\n\n  dailyForecast() {\n    return this._http.get(\"http://www.mocky.io/v2/5c0be3712f0000520013ec76?mocky-delay=3000ms\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}